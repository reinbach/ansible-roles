---
- name: check if machine user record exists
  postgresql_query:
    db: "{{ drone_database_name }}"
    login_host: "{{ drone_database_uri }}"
    login_user: "{{ drone_database_user }}"
    login_password: "{{ drone_database_password }}"
    query: SELECT count(*) FROM users WHERE user_login = %s
    positional_args:
      - "{{ drone_machine_user }}"
  register: machine_user_records

- set_fact:
    machine_user_record: "{{ machine_user_records.query_result | first }}"
  when: machine_user_records.query_result is defined

# need to allow time for traefik to get valid cert
- name: wait for drone server
  wait_for:
    host: "https://{{ drone_domain }}"
    delay: 10
    timeout: 60
  when: machine_user_record.count == 0

- name: add machine user for metrics
  become: yes
  command: "{{ drone_bin }} user add {{ drone_machine_user }} --admin --machine --token={{ drone_token }}"
  environment:
    DRONE_SERVER: "https://{{ drone_domain }}"
    DRONE_TOKEN: "{{ system_user_token.user_hash }}"
  when: machine_user_record.count == 0

- name: update prometheus user token
  postgresql_query:
    db: "{{ drone_database_name }}"
    login_host: "{{ drone_database_uri }}"
    login_user: "{{ drone_database_user }}"
    login_password: "{{ drone_database_password }}"
    query: UPDATE users SET user_hash = %s WHERE user_login = %s
    positional_args:
      - "{{ drone_token }}"
      - "{{ drone_machine_user }}"
  when: machine_user_record.count == 0
