---
- name: Install required packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ drone_packages }}"

- name: create drone group
  group:
    name: "{{ drone_group }}"
    state: present

- name: create drone user
  user:
    name: "{{ drone_user }}"
    group: "{{ drone_group }}"
    home: "{{ drone_working_dir }}"
    groups: docker
    append: yes

- name: make sure relevant directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ drone_user }}"
    group: "{{ drone_group }}"
    mode: 0755
    recurse: yes
  with_items:
    - "{{ drone_config_dir }}"
    - "{{ drone_working_dir }}/data"

- name: deploy config file
  notify: restart drone
  become: true
  template:
    src: drone.env.j2
    dest: "{{ drone_env_file }}"
    owner: "{{ drone_user }}"
    group: "{{ drone_group }}"
    mode: 0640

- name: deploy docker-compose file
  notify: restart drone
  template:
    src: docker-compose.yml.j2
    dest: "{{ drone_working_dir }}/docker-compose.yml"
    owner: "{{ drone_user }}"
    group: "{{ drone_group }}"
    mode: 0640
  tags:
    - drone

- name: download drone cli
  unarchive:
    src: "{{ drone_download_url }}"
    dest: "{{ drone_working_dir }}"
    owner: "{{ drone_user }}"
    group: "{{ drone_group }}"
    mode: 0755
    remote_src: yes

- include_role:
    name: traefik
  vars:
    docker_config: "yes"
    label: "{{ drone_label }}"
    domain: "{{ drone_domain }}"
    ip_address: "{{ ansible_default_ipv4.address }}"
