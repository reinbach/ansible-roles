---
- name: install required packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ pypiserver_packages }}"

- name: install required libraries
  pip:
    name: "{{ pypiserver_libraries }}"
    state: present

- name: create pypi group
  group:
    name: "{{ pypiserver_group }}"
    state: present

- name: create pypi user
  user:
    name: "{{ pypiserver_user }}"
    group: "{{ pypiserver_group }}"
    home: "{{ pypiserver_dir }}"
    groups: docker
    append: yes

- name: create needed directories
  file:
    path: "{{ pypiserver_dir }}/{{ item }}"
    state: directory
    owner: "{{ pypiserver_user }}"
    group: "{{ pypiserver_group }}"
    mode: 0755
    recurse: yes
  with_items: "{{ pypiserver_directories }}"

- name: deploy docker-compose file
  notify: restart pypiserver
  template:
    src: docker-compose.yml.j2
    dest: "{{ pypiserver_dir }}/docker-compose.yml"
    owner: "{{ pypiserver_user }}"
    group: "{{ pypiserver_group }}"
    mode: 0640
  tags:
    - pypiserver

- name: create the pypiserver systemd service file
  template:
    src: pypiserver.service.j2
    dest: "{{ systemd_units_dir }}/pypiserver.service"
  notify: restart pypiserver

- include_role:
    name: traefik
  vars:
    docker_config: "yes"
    label: "{{ pypiserver_label }}"
    domain: "{{ pypiserver_domain }}"
    ip_address: "{{ ansible_default_ipv4.address }}"
    middlewares:
      - auth
