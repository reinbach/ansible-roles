---
- name: install required packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ ansible_support_packages }}"

- name: create repo group
  group:
    name: "{{ repo_group }}"
    state: present

- name: create repo user
  user:
    name: "{{ repo_user }}"
    group: "{{ repo_group }}"
    home: "{{ repo_dir }}"

- name: create repo directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ repo_user }}"
    group: "{{ repo_group }}"
    mode: 0755
    recurse: yes
  with_items: "{{ repo_dirs }}"

- name: check if version exists
  stat:
    path: "{{ repo_dir }}/{{ repo_version }}"
  register: version

- name: download repo release
  unarchive:
    src: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: "{{ repo_user }}"
    group: "{{ repo_group }}"
    mode: 0755
    remote_src: true
    exclude:
      - tests
  with_items:
    - url: "{{ repo_release_url }}"
      dest: "{{ repo_dir }}"
  when: version.stat.exists == False

- name: rename repo download
  command: "mv {{ repo_dir }}/{{ repo_name }} {{ repo_dir }}/{{ repo_version }}"
  args:
    creates: "{{ repo_dir }}/{{ repo_version }}"
    removes: "{{ repo_dir }}/{{ repo_name }}"
  when: version.stat.exists == False

- name: link repo release
  file:
    path: "{{ repo_app_dir }}"
    src: "{{ repo_dir }}/{{ repo_version }}"
    state: link
    owner: "{{ repo_user }}"
    group: "{{ repo_group }}"
    mode: 0755
