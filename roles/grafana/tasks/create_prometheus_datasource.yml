---
# See https://grafana.com/docs/grafana/latest/http_api/data_source/#get-data-source-id-by-name
- name: check if prometheus data source exists
  uri:
    method: GET
    url: "http://localhost:{{ grafana_http_port }}/api/datasources/id/prometheus"
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ api_token }}"
    status_code:
      - 200
      - 404
  register: source_response
  when: api_token is defined

- debug:
    msg: "{{ source_response }}"
  when: source_response is defined

- set_fact:
    source_id: "{{ source_response.json.id | default(0) }}"
  when: source_response is defined

- debug:
    msg: "{{ source_id }}"
  when: source_id is defined

# See https://grafana.com/docs/grafana/latest/http_api/data_source/#create-a-data-source
- name: create prometheus as data source
  uri:
    method: POST
    url: "http://localhost:{{ grafana_http_port }}/api/datasources"
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ api_token }}"
    body_format: json
    body:
      name: "prometheus"
      type: "prometheus"
      url: "{{ prometheus_domain }}"
      access: "proxy"
      basicAuth: true
      basicAuthUser: "{{ prometheus_system_user_email }}"
      secureJsonData:
        basicAuthPassword: "{{ prometheus_system_user_password }}"
  register: source_created
  when: api_token is defined and source_id == "0"

# See https://grafana.com/docs/grafana/latest/http_api/data_source/#update-an-existing-data-source
- name: update prometheus data source
  uri:
    method: PUT
    url: "http://localhost:{{ grafana_http_port }}/api/datasources/{{ source_id }}"
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ api_token }}"
    body_format: json
    body:
      id: "{{ source_id }}"
      name: "prometheus"
      type: "prometheus"
      url: "{{ prometheus_domain }}"
      access: "proxy"
      basicAuth: true
      basicAuthUser: "{{ prometheus_system_user_email }}"
      secureJsonData:
        basicAuthPassword: "{{ prometheus_system_user_password }}"
  register: source_created
  when: api_token is defined and source_id != "0"
