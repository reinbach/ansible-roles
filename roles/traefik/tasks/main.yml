---
- name: Create traefik systemd unit
  template:
    src: "{{ traefik_systemd_unit_template }}.j2"
    dest: "{{ traefik_systemd_unit_dest }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart traefik

- name: Ensure install, config, and log directories exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_install_dir }}"
    - "{{ traefik_config_dir }}"
    - "{{ traefik_log_dir }}"

- name: Copy traefik config file
  template:
    src: "{{ traefik_template }}.j2"
    dest: "{{ traefik_config_file }}"
    owner: root
    group: root
    mode: 0744
    force: "no"
  notify:
    - Restart traefik

- name: Set docker provider
  blockinfile:
    path: "{{ traefik_config_file }}"
    marker_begin: "DOCKER_BEGIN"
    marker_end: "DOCKER_END"
    state: present
    block: |
        [providers.docker]
          endpoint = "unix:///var/run/docker.sock"
  notify:
    - Restart traefik
  when: docker_config == "yes"

- name: Copy traefik dashboard config file
  template:
    src: "{{ traefik_dashboard_config_file }}.j2"
    dest: "{{ traefik_config_dir }}/{{ traefik_dashboard_config_file }}"
    owner: root
    group: root
    mode: 0744

- name: Add dynamic config
  template:
    src: "{{ traefik_dynamic_config_file }}.j2"
    dest: "{{ traefik_config_dir }}/{{ domain }}.toml"
    owner: root
    group: root
    mode: 0744
  when: file_config == "yes"

- name: Ensure traefik service is stopped before traefik update
  service:
    name: traefik
    state: stopped
    enabled: true
  when: traefik_update

- name: Download Traefik binary
  unarchive:
    src: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
    remote_src: true
    exclude:
      - CHANGELOG.md
      - LICENSE.md
  with_items:
    - url: "{{ traefik_binary_url }}"
      dest: "{{ traefik_install_dir }}"
  when: traefik_update

- name: Ensure traefik service is enabled and running
  systemd:
    name: traefik
    state: started
    enabled: true
    daemon_reload: true
