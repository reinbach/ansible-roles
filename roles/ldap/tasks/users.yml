---
- name: configure ldap admin user
  ldap_attr:
    state: exact
    dn: olcDatabase={1}mdb,cn=config
    name: "{{ item.name }}"
    values: "{{ item.value }}"
  with_items:
    - name: olcRootDN
      value: "{{ ldap_dn_bind }}"
    - name: olcRootPW
      value: "{{ ldap_password }}"
  no_log: true

- name: Create users
  ldap_entry:
    state: "{{ item.state }}"
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    attributes:
      sn: "{{ item.last_name }}"
    objectClass:
      - inetOrgPerson
  with_items:
    - "{{ users }}"
  no_log: true

- name: Set user password attribute
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: userPassword
    values: "{CRYPT}{{ item.ldap_password }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true

- name: Set user email attribute
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: mail
    values: "{{ item.email }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true

- name: Set user first name attribute
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: givenName
    values: "{{ item.first_name }}"
  with_items:
    - "{{ users }}"
  when: item.first_name | length > 0 and item.state == "present"
  no_log: true

- name: Set user last name attribute
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: sn
    values: "{{ item.last_name }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true

- name: add user to admin group
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: memberOf
    values: "{{ ldap_admin_group_dn }}"
  with_items:
    - "{{ users }}"
  when: item.is_admin and item.state == "present"
  no_log: true

- name: remove user from admin group
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: "absent"
    name: memberOf
    values: "{{ ldap_admin_group_dn }}"
  with_items:
    - "{{ users }}"
  when: not item.is_admin and item.state == "present"
  no_log: true

# TODO remove this attr, need to update gitea --admin_filter
- name: Set user employee type attribute
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: employeeType
    values: "{{ item.type }}"
  with_items:
    - "{{ users }}"
  when: item.is_admin and item.state == "present"
  no_log: true
