---
- name: configure ldap admin user
  become: yes
  ldap_attrs:
    state: exact
    dn: olcDatabase={1}mdb,cn=config
    attributes:
      olcRootDN: "{{ ldap_admin_dn }}"
      olcRootPW: "{{ ldap_admin_password }}"
  no_log: true

- name: Create users
  become: yes
  ldap_entry:
    state: "{{ item.state }}"
    dn: "cn={{ item.username }},{{ ldap_user_dn }}"
    attributes:
      sn: "{{ item.last_name }}"
    objectClass:
      - inetOrgPerson
  with_items:
    - "{{ users }}"
  no_log: true
  tags: users

- name: Set user password attribute
  become: yes
  ldap_attrs:
    dn: "cn={{ item.username }},{{ ldap_user_dn }}"
    state: exact
    attributes:
      userPassword: "{CRYPT}{{ item.ldap_password }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  # no_log: true
  tags: users

- name: Set user email attribute
  become: yes
  ldap_attrs:
    dn: "cn={{ item.username }},{{ ldap_user_dn }}"
    state: exact
    attributes:
      mail: "{{ item.email }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true
  tags: users

- name: Set user first name attribute
  become: yes
  ldap_attrs:
    dn: "cn={{ item.username }},{{ ldap_user_dn }}"
    state: exact
    attributes:
      givenName: "{{ item.first_name }}"
  with_items:
    - "{{ users }}"
  when: item.first_name | length > 0 and item.state == "present"
  no_log: true
  tags: users

- name: Set user last name attribute
  become: yes
  ldap_attrs:
    dn: "cn={{ item.username }},{{ ldap_user_dn }}"
    state: exact
    attributes:
      sn: "{{ item.last_name }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true
  tags: users

- name: add user to admin group
  become: yes
  ldap_attrs:
    dn: "cn={{ item.username }},{{ ldap_user_dn }}"
    state: exact
    attributes:
      memberOf: "{{ ldap_admin_group_dn }}"
  with_items:
    - "{{ users }}"
  when: item.is_admin and item.state == "present"
  no_log: true
  tags: users

- name: remove user from admin group
  become: yes
  ldap_attrs:
    dn: "cn={{ item.username }},{{ ldap_user_dn }}"
    state: "absent"
    attributes:
      memberOf: "{{ ldap_admin_group_dn }}"
  with_items:
    - "{{ users }}"
  when: not item.is_admin and item.state == "present"
  no_log: true
  tags: users
