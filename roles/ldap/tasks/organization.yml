---
- name: "Create organization {{ ldap_organization }}"
  ldap_entry:
    state: present
    dn: "{{ ldap_base }}"
    objectClass:
      - organization
      - dcObject
      - top
    attributes:
      o: "{{ ldap_organization }}"

- name: "Create organizational units for {{ ldap_organization }}"
  ldap_entry:
    state: present
    dn: "{{ item.dn }}"
    attributes:
      ou: "{{ item.ou }}"
    objectClass:
      - organizationalUnit
  with_items:
    - dn: "{{ ldap_user_group_dn }}"
      ou: users
    - dn: "{{ ldap_admin_group_dn }}"
      ou: admins

- name: Create users
  tags: users
  ldap_entry:
    state: "{{ item.state }}"
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    attributes:
      sn: "{{ item.last_name }}"
    objectClass:
      - inetOrgPerson
  with_items:
    - "{{ users }}"
  no_log: true

- name: Set user password attribute
  tags: users
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: userPassword
    values: "{CRYPT}{{ item.ldap_password }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true

- name: Set user email attribute
  tags: users
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: mail
    values: "{{ item.email }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true

- name: Set user first name attribute
  tags: users
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: givenName
    values: "{{ item.first_name }}"
  with_items:
    - "{{ users }}"
  when: item.first_name | length > 0 and item.state == "present"
  no_log: true

- name: Set user last name attribute
  tags: users
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: sn
    values: "{{ item.last_name }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true

- name: Set user employee type attribute
  tags: users
  ldap_attr:
    dn: "cn={{ item.username }},{{ ldap_user_group_dn }}"
    state: exact
    name: employeeType
    values: "{{ item.type }}"
  with_items:
    - "{{ users }}"
  when: item.state == "present"
  no_log: true
